/* 
 * --------------------ECOBIKE RENTAL 1.0.1--------------------
 *
 * Design and Software Construction 20201
 *
 * Copyright (C) 2020 by Group 11
 *
 * Nguyen Thanh Long
 * Nguyen Hai Long
 * Nguyen Cong Luat
 * UN LyAn
 *
 * This software is created for academic purposes only. Not for
 * commercial purposes. We do not guarantee maintenance issues.
 *
 * ------------------------------------------------------------
 */
package com.hust.group11.ecobikerentalgroup11.boundary;

import com.hust.group11.ecobikerentalgroup11.controller.RentBikeController;
import com.hust.group11.ecobikerentalgroup11.controller.ReturnBikeController;
import com.hust.group11.ecobikerentalgroup11.controller.RentingController;
import com.google.zxing.FormatException;
import com.hust.group11.ecobikerentalgroup11.Constants;
import com.hust.group11.ecobikerentalgroup11.entity.Bike;
import com.hust.group11.ecobikerentalgroup11.entity.Transaction;
import com.hust.group11.ecobikerentalgroup11.MainEntry;
import com.hust.group11.ecobikerentalgroup11.QRCodeService;
import com.hust.group11.ecobikerentalgroup11.entity.DockingPoint;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Nguyen Thanh Long
 */
public class ScanCodeScreen extends javax.swing.JFrame {

    /**
     * Creates new form RentBikeScreen
     */
    private File fileBarCode;
    private final JFrame backScreen;
    private Bike bike;
    private RentBikeController rentBikeController;
    private ReturnBikeController returnBikeController;
    private Transaction transaction;
    private RentingController rentingController;

    public ScanCodeScreen(String barCode, JFrame backScreen) throws SQLException, IOException {
        initComponents();
        this.setIconImage(ImageIO.read(getClass().getClassLoader().getResourceAsStream("img/icon_app.png")));
        this.backScreen = backScreen;
        rentBikeController = new RentBikeController();
        this.barCodeTextField.setText(barCode);
    }

    public ScanCodeScreen(String barCode, Transaction transaction, JFrame backScreen) throws SQLException, IOException {
        initComponents();
        this.setIconImage(ImageIO.read(getClass().getClassLoader().getResourceAsStream("img/icon_app.png")));
        this.rentingController = new RentingController();
        this.bike = new RentBikeController().getBikeById(transaction.getBikeId(), "bike_id");
        this.backScreen = backScreen;
        this.transaction = transaction;
        returnBikeController = new ReturnBikeController();
        this.barCodeTextField.setText(barCode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        addFileLabel = new javax.swing.JLabel();
        imageCodePanel = new com.hust.group11.ecobikerentalgroup11.boundary.ImageCodePanel();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        barCodeTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scan Code");
        setResizable(false);

        checkButton.setText("Check");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanBarCode(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Scan Barcode/QRcode :");

        addButton.setText("Add File ");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileQRCode(evt);
            }
        });

        addFileLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        addFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addFileLabel.setText("Add image from device...");
        addFileLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        imageCodePanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout imageCodePanelLayout = new javax.swing.GroupLayout(imageCodePanel);
        imageCodePanel.setLayout(imageCodePanelLayout);
        imageCodePanelLayout.setHorizontalGroup(
            imageCodePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );
        imageCodePanelLayout.setVerticalGroup(
            imageCodePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBack(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(245, 245, 245));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("   To scan barcode, choose file from\n   device or enter code manually.\n   If you both enter code and\n   choose file. App will verify code\n   entered. ");
        jTextArea1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Enter code manually :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(231, 231, 231))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imageCodePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addFileLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                        .addComponent(checkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(barCodeTextField))))
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageCodePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(addFileLabel)
                .addGap(18, 18, 18)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backBtn)
                            .addComponent(checkButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addFileQRCode(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileQRCode
        //Create form file chooser
        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView());
        File file = new File(System.getProperty("user.dir"));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setCurrentDirectory(file);
        int saveResult = fileChooser.showSaveDialog(null);
        if (saveResult == JFileChooser.APPROVE_OPTION) {
            addFileLabel.setText(fileChooser.getSelectedFile().getName());
            fileBarCode = fileChooser.getSelectedFile();
            System.out.println("io = " + fileChooser.getSelectedFile().toURI());
            try {
                imageCodePanel.showImage(new FileInputStream(fileChooser.getSelectedFile()));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ScanCodeScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            imageCodePanel.repaint();
        } else {
            addFileLabel.setText("You choose no file");
        }
    }//GEN-LAST:event_addFileQRCode

    private void scanBarCode(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanBarCode
        try {
            String barCodeInput = barCodeTextField.getText();
            String barCode = "";
            boolean isValid = true;
            if (fileBarCode != null | !barCodeTextField.getText().isEmpty()) {
                if (fileBarCode != null && barCodeTextField.getText().isEmpty()) {
                    if (!checkFileExtension(fileBarCode)) {
                        JOptionPane.showMessageDialog(this, "File is not an image!\nYou must choose file .jpg, .png");
                        isValid = false;
                    } else {
                        barCode = QRCodeService.readQRCode(fileBarCode);
                    }
                } else if (barCodeInput.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "You have not selected file yet");
                }
                if (!barCodeInput.isEmpty()) {
                    barCode = barCodeInput;
                }
                if (isValid) {
                    if (MainEntry.user.getStatus() == Constants.USER_AVAIL) {
                        DockingPoint dockingPoint = rentBikeController.handleCheckBarCode(barCode);
                        if (dockingPoint == null) {
                            JOptionPane.showMessageDialog(this, "Scan code fail, Try again!!");
                        } else if (dockingPoint.getStatus() == Constants.DOCK_HAS_BIKE) {
                            RentBikeScreen rentBikeScreen = new RentBikeScreen(dockingPoint, this);
                            MainEntry.move(this, rentBikeScreen);
                        } else {
                            JOptionPane.showMessageDialog(this, "Docking Point Has No Bike");
                        }
                    } else {
                        DockingPoint dockingPoint = returnBikeController.handleCheckBarCode(barCode);
                        if (dockingPoint == null) {
                            JOptionPane.showMessageDialog(this, "Scan code fail, Try again!!");
                        } else if (dockingPoint.getStatus() == Constants.DOCK_EMPTY) {
                            ReturnBikeScreen returnBikeScreen = new ReturnBikeScreen(transaction, dockingPoint, this);
                            MainEntry.move(this, returnBikeScreen);
                        } else {
                            JOptionPane.showMessageDialog(this, "The doking point is not available to return!!");
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "You must input barcode first!!");
            }

        } catch (FormatException | IOException | SQLException ex) {
            Logger.getLogger(ScanCodeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_scanBarCode
    private boolean checkFileExtension(File file) {
        String name = file.getName();
        int lastIndexOf = name.lastIndexOf(".");
        if (lastIndexOf == -1) {
            return false;
        }
        String ext = name.substring(lastIndexOf);
        System.out.println("ext: " + name.substring(lastIndexOf));
        return ext.equals(".png") | ext.equals(".jpg") | ext.equals(".PNG") | ext.equals(".JPG");
    }

    /**
     * Handle event user click to back button.
     *
     * @param evt
     */
    private void goBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBack
        MainEntry.move(this, backScreen);
    }//GEN-LAST:event_goBack


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addFileLabel;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField barCodeTextField;
    private javax.swing.JButton checkButton;
    private com.hust.group11.ecobikerentalgroup11.boundary.ImageCodePanel imageCodePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
